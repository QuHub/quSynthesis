#pragma once
#include "stdafx.h"
#include <iostream>
#include <fstream>
#include <math.h>
#include <msclr\marshal.h>
#include <windows.h>
#include "Function.h"

using namespace System;
using namespace System::Collections::Generic;
using namespace std;
using namespace System::IO;

#define INPUT_DIR "..\\inputs\\"


namespace QuLogic {
  public ref class FunctionReader {
    UINT m_nCount;
    ULONGLONG m_nFiles, m_nSequence, m_nBits, m_nTerms;
    array<String^, 1>^ m_Files;
    StreamReader ^m_sr;
    ULONGLONG *m_pInput;
    List<Function^>^ m_Functions;

  public:
    int Count() {return m_nCount;}


    FunctionReader(String^ FilePattern) {
      m_Functions =  gcnew List<Function^>();
      array<String^>^ files = Directory::GetFiles(INPUT_DIR, FilePattern + ".txt");

      m_nCount = files->Length;
      for(int i =0; i < m_nCount ; i++) 
          Read(files[i]);
    }

    void Read(String^ fileName)
    {
    }

    ~FunctionReader()
    {
    }

    Function^ Next()
    {
      /*
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};
      ULONGLONG pOut[] = {0, 16, 32, 48, 64, 80, 96, 112, 2, 4, 18, 20, 34, 36, 50, 52, 68, 84, 5, 21, 37, 53, 8, 24, 6, 128, 7, 1, 23, 17, 10, 12};
      return gcnew Function("Ankit", 8, 32, pIn, pOut);

      example 1
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7};
      ULONGLONG pOut[] = {0, 1, 16, 2, 32, 4, 48, 8};
      return gcnew Function("Example 1", 6, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);

      example 2
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};
      ULONGLONG pOut[] = {0, 4, 8, 12, 16, 20, 24, 28, 1, 2, 6, 10, 14, 18, 22, 26, 5, 30, 34, 38, 42, 46, 50, 54, 32, 36, 40, 44, 48, 52, 56, 60};
      return gcnew Function("Perok01", 6, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);

      example 3
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127};
      ULONGLONG pOut[] = {0, 1, 8, 9, 16, 2, 24, 10, 32, 17, 40, 25, 48, 18, 56, 26, 64, 33, 72, 41, 80, 34, 88, 42, 96, 49, 4, 5, 104, 50, 12, 6, 112, 57, 120, 65, 128, 58, 136, 66, 144, 73, 152, 81, 160, 74, 168, 82, 176, 89, 184, 97, 192, 90, 200, 98, 208, 105, 20, 13, 216, 106, 28, 14, 224, 113, 232, 121, 240, 114, 248, 122, 256, 129, 264, 137, 272, 130, 280, 138, 288, 145, 296, 153, 304, 146, 312, 154, 320, 161, 36, 21, 328, 162, 44, 22, 336, 169, 52, 29, 344, 170, 60, 30, 352, 177, 68, 37, 360, 178, 76, 38, 368, 185, 84, 45, 376, 186, 92, 46, 384, 193, 392, 201, 400, 194, 408, 202};
      return gcnew Function("Example 3", 9, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);

      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255};
      ULONGLONG pOut[] = {0, 1, 5, 9, 13, 17, 21, 25, 29, 33, 37, 41, 45, 49, 53, 57, 2, 6, 10, 14, 18, 22, 26, 30, 34, 38, 42, 46, 50, 54, 58, 62, 4, 61, 65, 69, 73, 77, 81, 85, 89, 93, 97, 101, 105, 109, 113, 117, 66, 70, 74, 78, 82, 86, 90, 94, 98, 102, 106, 110, 114, 118, 122, 126, 8, 121, 125, 129, 133, 137, 141, 145, 149, 153, 157, 161, 165, 169, 173, 177, 130, 134, 138, 142, 146, 150, 154, 158, 162, 166, 170, 174, 178, 182, 186, 190, 12, 181, 185, 189, 193, 197, 201, 205, 209, 213, 217, 221, 225, 229, 233, 237, 194, 198, 202, 206, 210, 214, 218, 222, 226, 230, 234, 238, 242, 246, 250, 254, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 258, 262, 266, 270, 274, 278, 282, 286, 290, 294, 298, 302, 306, 310, 314, 318, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 322, 326, 330, 334, 338, 342, 346, 350, 354, 358, 362, 366, 370, 374, 378, 382, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 386, 390, 394, 398, 402, 406, 410, 414, 418, 422, 426, 430, 434, 438, 442, 446, 450, 454, 458, 462, 466, 470, 474, 478, 482, 486, 490, 494, 498, 502, 506, 510, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256, 260, 264, 268};
      return gcnew Function("Example 3", 9, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);

      example 5:
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255};
      ULONGLONG pOut[] = {2, 3, 7, 6, 4, 20, 0, 16, 8, 24, 40, 56, 72, 88, 104, 120, 136, 152, 168, 184, 200, 216, 232, 248, 264, 280, 296, 312, 328, 344, 360, 376, 32, 48, 64, 80, 96, 112, 128, 144, 392, 408, 424, 440, 456, 472, 488, 504, 520, 536, 552, 568, 584, 600, 616, 632, 648, 664, 680, 696, 712, 728, 744, 760, 160, 176, 36, 52, 68, 84, 192, 208, 776, 792, 808, 824, 840, 856, 872, 888, 904, 920, 936, 952, 968, 984, 1000, 1016, 1032, 1048, 1064, 1080, 1096, 1112, 1128, 1144, 1160, 1176, 1192, 1208, 1224, 1240, 1256, 1272, 224, 240, 256, 272, 288, 304, 320, 336, 352, 368, 384, 400, 416, 432, 448, 464, 480, 496, 512, 528, 544, 560, 576, 592, 608, 624, 100, 116, 132, 148, 640, 656, 1288, 1304, 1320, 1336, 1352, 1368, 1384, 1400, 1416, 1432, 1448, 1464, 1480, 1496, 1512, 1528, 1544, 1560, 1576, 1592, 1608, 1624, 1640, 1656, 1672, 1688, 1704, 1720, 1736, 1752, 1768, 1784, 672, 688, 704, 720, 736, 752, 768, 784, 800, 816, 832, 848, 864, 880, 896, 912, 928, 944, 960, 976, 992, 1008, 1024, 1040, 1056, 1072, 164, 180, 196, 212, 1088, 1104, 1800, 1816, 1832, 1848, 1864, 1880, 1896, 1912, 1928, 1944, 1960, 1976, 1992, 2008, 2024, 2040, 2056, 2072, 2088, 2104, 2120, 2136, 2152, 2168, 2184, 2200, 2216, 2232, 2248, 2264, 2280, 2296, 1120, 1136, 1152, 1168, 1184, 1200, 1216, 1232, 1248, 1264, 1280, 1296, 1312, 1328, 1344, 1360, 1376, 1392, 1408, 1424, 1440, 1456, 1472, 1488};
      return gcnew Function("Perok01", 12, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);

      example 6:
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63};
      ULONGLONG pOut[] = {0, 2, 4, 6, 8, 1, 3, 5, 7, 9, 11, 13, 15, 10, 12, 14, 17, 19, 21, 23, 25, 16, 18, 20, 22, 24, 26, 28, 30, 27, 29, 31, 33, 35, 37, 39, 41, 32, 34, 36, 38, 40, 42, 44, 46, 43, 45, 47, 48, 50, 52, 54, 56, 49, 51, 53, 55, 57, 59, 61, 63, 58, 60, 62};
      return gcnew Function("Perok01", 6, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);

       example 10
      ULONGLONG pIn[] = {0, 1, 2, 3};
      ULONGLONG pOut[] = {0, 1, 3, 5};
      return gcnew Function("Example 2", 3, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);
      // example 11
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63};
      ULONGLONG pOut[] = {0, 2, 4, 1, 6, 8, 10, 3, 12, 14, 16, 5, 7, 9, 11, 18, 20, 22, 24, 13, 26, 28, 30, 15, 32, 34, 36, 17, 19, 21, 23, 38, 40, 42, 44, 25, 46, 48, 50, 27, 52, 54, 56, 29, 31, 33, 35, 58, 37, 39, 41, 60, 43, 45, 47, 62, 49, 51, 53, 64, 66, 68, 70, 55};
      return gcnew Function("Example 2", 7, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);

      // example 12
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};
      ULONGLONG pOut[] = {0, 1, 3, 5, 7, 2, 4, 6, 9, 8, 10, 12, 14, 11, 13, 15};
      return gcnew Function("Example 2", 4, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);

      // example 15
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511};
      ULONGLONG pOut[] = {0, 8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96, 104, 112, 120, 128, 136, 144, 152, 160, 168, 176, 184, 192, 200, 208, 216, 224, 232, 240, 248, 256, 264, 272, 280, 288, 296, 304, 312, 320, 328, 336, 344, 352, 360, 368, 376, 384, 392, 400, 408, 416, 424, 432, 440, 448, 456, 464, 472, 480, 488, 496, 504, 512, 520, 528, 536, 544, 552, 560, 568, 576, 584, 592, 600, 608, 616, 624, 632, 640, 648, 656, 664, 672, 680, 688, 696, 704, 712, 720, 728, 736, 744, 752, 760, 768, 776, 784, 792, 800, 808, 816, 824, 832, 840, 848, 856, 864, 872, 880, 888, 896, 904, 912, 920, 928, 936, 944, 952, 960, 968, 976, 984, 992, 1000, 1008, 1016, 1024, 4, 1032, 12, 1040, 20, 1048, 28, 1056, 36, 1064, 44, 1072, 52, 1080, 60, 1088, 68, 1096, 76, 1104, 84, 1112, 92, 1120, 100, 1128, 108, 1136, 116, 1144, 124, 1152, 132, 1160, 140, 1168, 148, 1176, 156, 1184, 164, 1192, 172, 1200, 180, 1208, 188, 1216, 196, 1224, 204, 1232, 212, 1240, 220, 1248, 228, 1256, 236, 1264, 244, 1272, 252, 1280, 260, 1288, 268, 1296, 276, 1304, 284, 1312, 292, 1320, 300, 1328, 308, 1336, 316, 1344, 324, 1352, 332, 1360, 340, 1368, 348, 1376, 356, 1384, 364, 1392, 372, 1400, 380, 1408, 388, 1416, 396, 1424, 404, 1432, 412, 1440, 420, 1448, 428, 1456, 436, 1464, 444, 1472, 452, 1480, 460, 1488, 468, 1496, 476, 1504, 484, 1512, 492, 1520, 500, 1528, 508, 1536, 516, 1544, 524, 1552, 532, 1560, 540, 1568, 548, 1576, 556, 1584, 564, 1592, 572, 1600, 580, 1608, 588, 1616, 596, 1624, 604, 1632, 612, 1640, 620, 1648, 628, 1656, 636, 1664, 644, 1672, 652, 1680, 660, 1688, 668, 1696, 676, 1704, 684, 1712, 692, 1720, 700, 1728, 708, 1736, 716, 1744, 724, 1752, 732, 1760, 740, 1768, 748, 1776, 756, 1784, 764, 1792, 772, 1800, 780, 1808, 788, 1816, 796, 1824, 804, 1832, 812, 1840, 820, 1848, 828, 1856, 836, 1864, 844, 1872, 852, 1880, 860, 1888, 868, 1896, 876, 1904, 884, 1912, 892, 1920, 900, 1928, 908, 1936, 916, 1944, 924, 1952, 932, 1960, 940, 1968, 948, 1976, 956, 1984, 964, 1992, 972, 2000, 980, 2008, 988, 2016, 996, 2024, 1004, 2032, 1012, 2040, 1020, 2048, 2056, 2064, 1, 2072, 9, 2080, 2088, 2096, 17, 2104, 2112, 2120, 2128, 2136, 25, 2144, 2, 2152, 10, 2160, 18, 2168, 26, 2176, 34, 2184, 42, 2192, 50, 2200, 58, 2208, 66, 2216, 74, 2224, 82, 2232, 90, 2240, 98, 2248, 106, 2256, 114, 2264, 122, 2272, 130, 2280, 138, 2288, 146, 2296, 154, 2304, 162, 2312, 170, 2320, 178, 2328, 186, 2336, 194, 2344, 202, 2352, 210, 2360, 218, 2368, 226, 2376, 234, 2384, 242, 2392, 250, 2400, 258, 2408, 266, 2416, 274, 2424, 282, 2432, 290, 2440, 298, 2448, 306, 2456, 314, 2464, 322, 2472, 330, 2480, 338, 2488, 346, 2496, 354, 2504, 362, 2512, 370, 2520, 378, 2528, 386, 2536, 394, 2544, 402, 2552, 410, 2560, 418, 2568, 426, 2576, 434, 2584, 442};
      return gcnew Function("Example 2", 12, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);
      // example 7
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31};
      ULONGLONG pOut[] = {0, 4, 8, 1, 12, 16, 20, 2, 24, 28, 32, 6, 36, 40, 44, 10, 48, 52, 56, 14, 60, 64, 68, 18, 72, 76, 80, 22, 84, 88, 92, 26};
      return gcnew Function("Example 2", 7, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);
      // example 8
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63};
      ULONGLONG pOut[] = {0, 8, 16, 24, 2, 10, 18, 26, 32, 4, 12, 40, 48, 20, 28, 56, 64, 36, 72, 44, 80, 52, 88, 60, 96, 68, 76, 104, 112, 84, 92, 120, 128, 136, 100, 108, 144, 152, 116, 124, 160, 132, 140, 168, 176, 148, 156, 184, 192, 200, 208, 216, 1, 9, 17, 25, 224, 164, 172, 232, 240, 180, 188, 248};
      return gcnew Function("Example 8", 8, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);

      */
      // example 9
      ULONGLONG pIn[] = {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15};
      ULONGLONG pOut[] = {0, 1, 5, 4, 8, 9, 2, 3, 12, 6, 10, 16, 20, 14, 18, 24};
      return gcnew Function("Example 9", 5, sizeof(pOut)/sizeof(ULONGLONG), pIn, pOut);
    }
  };
}

/*
example 1 3/6 bits): 0 1 16 2 32 4 48 8
skip- example 2 6/7 bits: 0 4 8 12 16 20 24 28 32 36 40 44 48 52 56 60 1 5 2 6 10 14 18 22 26 30 34 38 42 46 50 54 9 13 58 62 66 70 74 78 82 86 90 94 98 102 106 110 64 68 72 76 80 84 88 92 96 100 104 108 112 116 120 124
example 3 7/9 bits: 0 1 8 9 16 2 24 10 32 17 40 25 48 18 56 26 64 33 72 41 80 34 88 42 96 49 4 5 104 50 12 6 112 57 120 65 128 58 136 66 144 73 152 81 160 74 168 82 176 89 184 97 192 90 200 98 208 105 20 13 216 106 28 14 224 113 232 121 240 114 248 122 256 129 264 137 272 130 280 138 288 145 296 153 304 146 312 154 320 161 36 21 328 162 44 22 336 169 52 29 344 170 60 30 352 177 68 37 360 178 76 38 368 185 84 45 376 186 92 46 384 193 392 201 400 194 408 202
example 4 8/9 bits

example 8: 

*/
